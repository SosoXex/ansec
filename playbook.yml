- hosts: localhost
  gather_facts: no
  vars_files:
  - aws.yml
  tasks:
  - name:
    pip:
      name: boto3
      state: present
  - name: Creating Security Group for WebServer on AWS
    ec2_group:
      name: SecGrp
      description: Security Group for Web Server allowing port for http and ssh
      region: eu-central-1
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ security_key }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
  - name: launching ec2 instance for builder
    ec2:
        key_name: ansec
        instance_type: t2.micro
        image: ami-0c9354388bb36c088
        wait: true
        group: SecGrp
        count: 1
        vpc_subnet_id: subnet-081298183b5a18fe4
        assign_public_ip: yes
        region: eu-central-1
        state: present
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ security_key }}"
        instance_tags:
          Name: builder
    register: ec2

  - name: Add new instance to host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: builder
    loop: "{{ ec2.instances }}"
    delegate_to: localhost

  - name: Wait for SSH to come up
    wait_for:
      host: "{{ item.public_dns_name }}"
      port: 22
      state: started
    loop: "{{ ec2.instances }}"

  - name: launching ec2 instance for tomcat
    ec2:
        key_name: ansec
        instance_type: t2.micro
        image: ami-0c9354388bb36c088
        wait: true
        group: SecGrp
        count: 1
        vpc_subnet_id: subnet-081298183b5a18fe4
        assign_public_ip: yes
        region: eu-central-1
        state: present
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ security_key }}"
        instance_tags:
          Name: tomcat
    register: ec2

  - name: Add new instance to host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: tomcat
    loop: "{{ ec2.instances }}"
    delegate_to: localhost

  - name: Wait for SSH to come up
    wait_for:
      host: "{{ item.public_dns_name }}"
      port: 22
      state: started
    loop: "{{ ec2.instances }}"

- hosts: builder
  become: yes
  tasks:
    - name: Update cache
      apt:
        update_cache: yes
    - name: Install apps
      apt:
        name: "{{item}}"
        state: present
      with_items:
        - default-jdk
        - git
        - maven
    - name: Copy build params
      copy:
        src: 4maven.txt
        dest: /tmp/build/
    - name: Add environments
      shell:
        chdir: /tmp/build/
        cmd: rm -rf $HOME/app.war;PLINK=$(sed -n '1p' 4maven.txt);PDIR=$(sed -n '2p' 4maven.txt);rm -rf $PDIR
    - name: Add pull code
      shell:
        chdir: /tmp/build/
        cmd: PLINK=$(sed -n '1p' 4maven.txt);git clone $PLINK
    - name: build code
      shell:
        chdir: /tmp/build/
        cmd: PDIR=$(sed -n '2p' 4maven.txt);mvn -f $PDIR/pom.xml package
    - name: Fetch war
      fetch:
        src: /tmp/build/war-web-project/target/wwp-1.0.0.war
        dest: ./build/
        flat: yes


- hosts: tomcat
  become: yes
  tasks:
    - name: Update cache
      apt:
        update_cache: yes
    - name: Install apps
      apt:
        name: "{{item}}"
        state: present
      with_items:
        - default-jdk
        - tomcat9
    - name: Ensure tomcat started
      service:
        name: tomcat9
        state: started

    - name: Copy package file
      copy:
        src: build/
        dest: /var/lib/tomcat9/webapps/
        owner: tomcat
        group: tomcat